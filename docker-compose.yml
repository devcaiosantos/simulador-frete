services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-sf
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - PORT=${BACKEND_PORT}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_URL=${GOOGLE_MAPS_URL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=production
    depends_on:
      - postgres
    networks:
      - app-network
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:${BACKEND_PORT}/api
    container_name: frontend-sf
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - PORT=${FRONTEND_PORT}
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network
  
  postgres:
    image: postgres:13
    container_name: postgres-sf
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: America/Sao_Paulo
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge